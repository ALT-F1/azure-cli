# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from azure.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from ..generated._client_factory import cf_cluster
    kustotest_cluster = CliCommandType(
        operations_tmpl='azure.mgmt.kusto.operations#ClustersOperations.{}',
        client_factory=cf_cluster)
    with self.command_group('kustotest cluster', kustotest_cluster, client_factory=cf_cluster,
                            is_experimental=True) as g:
        g.custom_command('list', 'kustotest_cluster_list')
        g.custom_show_command('show', 'kustotest_cluster_show')
        g.custom_command('create', 'kustotest_cluster_create', supports_no_wait=True)
        g.custom_command('update', 'kustotest_cluster_update', supports_no_wait=True)
        g.custom_command('delete', 'kustotest_cluster_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('add-language-extension', 'kustotest_cluster_add_language_extension', supports_no_wait=True)
        g.custom_command('detach-follower-database', 'kustotest_cluster_detach_follower_database',
                         supports_no_wait=True)
        g.custom_command('diagnose-virtual-network', 'kustotest_cluster_diagnose_virtual_network',
                         supports_no_wait=True)
        g.custom_command('list-follower-database', 'kustotest_cluster_list_follower_database')
        g.custom_command('list-language-extension', 'kustotest_cluster_list_language_extension')
        g.custom_command('list-sku', 'kustotest_cluster_list_sku')
        g.custom_command('remove-language-extension', 'kustotest_cluster_remove_language_extension',
                         supports_no_wait=True)
        g.custom_command('start', 'kustotest_cluster_start', supports_no_wait=True)
        g.custom_command('stop', 'kustotest_cluster_stop', supports_no_wait=True)
        g.custom_wait_command('wait', 'kustotest_cluster_show')

    from ..generated._client_factory import cf_cluster_principal_assignment
    kustotest_cluster_principal_assignment = CliCommandType(
        operations_tmpl='azure.mgmt.kusto.operations#ClusterPrincipalAssignmentsOperations.{}',
        client_factory=cf_cluster_principal_assignment)
    with self.command_group('kustotest cluster-principal-assignment', kustotest_cluster_principal_assignment,
                            client_factory=cf_cluster_principal_assignment, is_experimental=True) as g:
        g.custom_command('list', 'kustotest_cluster_principal_assignment_list')
        g.custom_show_command('show', 'kustotest_cluster_principal_assignment_show')
        g.custom_command('create', 'kustotest_cluster_principal_assignment_create', supports_no_wait=True)
        g.custom_command('update', 'kustotest_cluster_principal_assignment_update', supports_no_wait=True)
        g.custom_command('delete', 'kustotest_cluster_principal_assignment_delete', supports_no_wait=True,
                         confirmation=True)
        g.custom_wait_command('wait', 'kustotest_cluster_principal_assignment_show')

    from ..generated._client_factory import cf_database
    kustotest_database = CliCommandType(
        operations_tmpl='azure.mgmt.kusto.operations#DatabasesOperations.{}',
        client_factory=cf_database)
    with self.command_group('kustotest database', kustotest_database, client_factory=cf_database,
                            is_experimental=True) as g:
        g.custom_command('list', 'kustotest_database_list')
        g.custom_show_command('show', 'kustotest_database_show')
        g.custom_command('create', 'kustotest_database_create', supports_no_wait=True)
        g.custom_command('update', 'kustotest_database_update', supports_no_wait=True)
        g.custom_command('delete', 'kustotest_database_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('add-principal', 'kustotest_database_add_principal')
        g.custom_command('list-principal', 'kustotest_database_list_principal')
        g.custom_command('remove-principal', 'kustotest_database_remove_principal')
        g.custom_wait_command('wait', 'kustotest_database_show')

    from ..generated._client_factory import cf_database_principal_assignment
    kustotest_database_principal_assignment = CliCommandType(
        operations_tmpl='azure.mgmt.kusto.operations#DatabasePrincipalAssignmentsOperations.{}',
        client_factory=cf_database_principal_assignment)
    with self.command_group('kustotest database-principal-assignment', kustotest_database_principal_assignment,
                            client_factory=cf_database_principal_assignment, is_experimental=True) as g:
        g.custom_command('list', 'kustotest_database_principal_assignment_list')
        g.custom_show_command('show', 'kustotest_database_principal_assignment_show')
        g.custom_command('create', 'kustotest_database_principal_assignment_create', supports_no_wait=True)
        g.custom_command('update', 'kustotest_database_principal_assignment_update', supports_no_wait=True)
        g.custom_command('delete', 'kustotest_database_principal_assignment_delete', supports_no_wait=True,
                         confirmation=True)
        g.custom_wait_command('wait', 'kustotest_database_principal_assignment_show')

    from ..generated._client_factory import cf_attached_database_configuration
    kustotest_attached_database_configuration = CliCommandType(
        operations_tmpl='azure.mgmt.kusto.operations#AttachedDatabaseConfigurationsOperations.{}',
        client_factory=cf_attached_database_configuration)
    with self.command_group('kustotest attached-database-configuration', kustotest_attached_database_configuration,
                            client_factory=cf_attached_database_configuration, is_experimental=True) as g:
        g.custom_command('list', 'kustotest_attached_database_configuration_list')
        g.custom_show_command('show', 'kustotest_attached_database_configuration_show')
        g.custom_command('create', 'kustotest_attached_database_configuration_create', supports_no_wait=True)
        g.custom_command('update', 'kustotest_attached_database_configuration_update', supports_no_wait=True)
        g.custom_command('delete', 'kustotest_attached_database_configuration_delete', supports_no_wait=True,
                         confirmation=True)
        g.custom_wait_command('wait', 'kustotest_attached_database_configuration_show')

    from ..generated._client_factory import cf_data_connection
    kustotest_data_connection = CliCommandType(
        operations_tmpl='azure.mgmt.kusto.operations#DataConnectionsOperations.{}',
        client_factory=cf_data_connection)
    with self.command_group('kustotest data-connection', kustotest_data_connection, client_factory=cf_data_connection,
                            is_experimental=True) as g:
        g.custom_command('list', 'kustotest_data_connection_list')
        g.custom_show_command('show', 'kustotest_data_connection_show')
        g.custom_command('event-grid create', 'kustotest_data_connection_event_grid_create', supports_no_wait=True)
        g.custom_command('event-hub create', 'kustotest_data_connection_event_hub_create', supports_no_wait=True)
        g.custom_command('iot-hub create', 'kustotest_data_connection_iot_hub_create', supports_no_wait=True)
        g.custom_command('event-grid update', 'kustotest_data_connection_event_grid_update', supports_no_wait=True)
        g.custom_command('event-hub update', 'kustotest_data_connection_event_hub_update', supports_no_wait=True)
        g.custom_command('iot-hub update', 'kustotest_data_connection_iot_hub_update', supports_no_wait=True)
        g.custom_command('delete', 'kustotest_data_connection_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('data-connection-validation', 'kustotest_data_connection_data_connection_validation',
                         supports_no_wait=True)
        g.custom_wait_command('wait', 'kustotest_data_connection_show')
